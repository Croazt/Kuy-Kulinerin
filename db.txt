create table `users`(
    id integer unique auto_increment,
    nama varchar(40) not null,
    email varchar(30) unique not null,
    username varchar(30) primary key not null,
    password varchar(500) not null,
    phone varchar(20) unique not null,
    role int(1) not null,
    superadmin int(1) not null,
    balance BIGINT not null
);

create table `places`(
    id int PRIMARY KEY AUTO_INCREMENT,
    nama text not null,
    location text not null,
    rating double not null,
    coworking int(1) not null,
    cafe int(1) not null,
    restaurant int(1) not null,
    googlemap text,
    lowprice int not null,
    highprice int not null,
    opentime time not null,
    closetime time not null,
    description text,
    recomended int(1) not null,
    image text,
    id_users varchar(40) not null,
    createdAt timestamp default CURRENT_TIMESTAMP,
    updatedAt timestamp default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
    FOREIGN KEY (id_users) REFERENCES users(username) on delete cascade
);

create table `menus`(
  id INTEGER primary key auto_increment,
  id_places INTEGER not null,
  nama text not null,
  id_users varchar(40) not null,
      price BIGINT not null,
      FOREIGN KEY (id_places) REFERENCES places(id) on delete cascade,
      FOREIGN KEY (id_users) REFERENCES users(username) on delete cascade
 )

create table `transactions`(
    id INT primary key not null auto_increment,
    id_users varchar(40) not null,
    id_places int not null,
    price BIGINT not null,
    createdAt timestamp default CURRENT_TIMESTAMP,
    updatedAt timestamp default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
    FOREIGN KEY (id_places) REFERENCES places(id) on delete cascade,
    FOREIGN KEY (id_users) REFERENCES users(username) on delete cascade
)

create table `details`(
  id INT primary key not null auto_increment,
    id_users varchar(40) not null,
    id_places int not null,
    id_menu int not null,
    id_transaction int not null,
    price BIGINT not null,
  namamenu text not null,
    createdAt timestamp default CURRENT_TIMESTAMP,
    updatedAt timestamp default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
    FOREIGN KEY (id_places) REFERENCES places(id) on delete cascade,
    FOREIGN KEY (id_users) REFERENCES users(username) on delete cascade,
    FOREIGN KEY (id_menu) REFERENCES menus(id) on delete cascade,
    FOREIGN KEY (id_transaction) REFERENCES transactions(id) on delete cascade
)

create table `ratings`(
  id int primary key auto_increment,
  id_users varchar(40) unique not null,
  userRating double not null,
  id_places int not null,
  createdAt timestamp default CURRENT_TIMESTAMP,
  updatedAt timestamp default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  FOREIGN KEY (id_places) REFERENCES places(id) on delete cascade,
  FOREIGN KEY (id_users) REFERENCES users(username) on delete cascade
)

create table `comment`(
  id int primary key auto_increment,
  id_users varchar(40) unique not null,
  userComment text not null,
  id_places int not null,
  createdAt timestamp default CURRENT_TIMESTAMP,
  updatedAt timestamp default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  FOREIGN KEY (id_places) REFERENCES places(id) on delete cascade,
  FOREIGN KEY (id_users) REFERENCES users(username) on delete cascade
)

CREATE EVENT cleaningTransaction ON SCHEDULE EVERY 2 MONTH ENABLE
  DO 
  DELETE FROM transactions
  WHERE `createdAt` < CURRENT_TIMESTAMP - INTERVAL 4 MONTH


CREATE EVENT cleaning ON SCHEDULE EVERY 5 DAYS ENABLE
  DO 
  DELETE FROM comment
  WHERE `createdAt` < CURRENT_TIMESTAMP - INTERVAL 1 WEEK